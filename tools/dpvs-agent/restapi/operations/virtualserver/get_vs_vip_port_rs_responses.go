// Code generated by go-swagger; DO NOT EDIT.

package virtualserver

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetVsVipPortRsOKCode is the HTTP code returned for type GetVsVipPortRsOK
const GetVsVipPortRsOKCode int = 200

/*
GetVsVipPortRsOK Success

swagger:response getVsVipPortRsOK
*/
type GetVsVipPortRsOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetVsVipPortRsOK creates GetVsVipPortRsOK with default headers values
func NewGetVsVipPortRsOK() *GetVsVipPortRsOK {

	return &GetVsVipPortRsOK{}
}

// WithPayload adds the payload to the get vs vip port rs o k response
func (o *GetVsVipPortRsOK) WithPayload(payload string) *GetVsVipPortRsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get vs vip port rs o k response
func (o *GetVsVipPortRsOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVsVipPortRsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetVsVipPortRsNotFoundCode is the HTTP code returned for type GetVsVipPortRsNotFound
const GetVsVipPortRsNotFoundCode int = 404

/*
GetVsVipPortRsNotFound Service not found

swagger:response getVsVipPortRsNotFound
*/
type GetVsVipPortRsNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetVsVipPortRsNotFound creates GetVsVipPortRsNotFound with default headers values
func NewGetVsVipPortRsNotFound() *GetVsVipPortRsNotFound {

	return &GetVsVipPortRsNotFound{}
}

// WithPayload adds the payload to the get vs vip port rs not found response
func (o *GetVsVipPortRsNotFound) WithPayload(payload string) *GetVsVipPortRsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get vs vip port rs not found response
func (o *GetVsVipPortRsNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVsVipPortRsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
