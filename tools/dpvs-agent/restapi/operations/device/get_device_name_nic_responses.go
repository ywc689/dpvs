// Code generated by go-swagger; DO NOT EDIT.

package device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dpvs-agent/models"
)

// GetDeviceNameNicOKCode is the HTTP code returned for type GetDeviceNameNicOK
const GetDeviceNameNicOKCode int = 200

/*
GetDeviceNameNicOK Success

swagger:response getDeviceNameNicOK
*/
type GetDeviceNameNicOK struct {

	/*
	  In: Body
	*/
	Payload *models.NicDeviceSpecList `json:"body,omitempty"`
}

// NewGetDeviceNameNicOK creates GetDeviceNameNicOK with default headers values
func NewGetDeviceNameNicOK() *GetDeviceNameNicOK {

	return &GetDeviceNameNicOK{}
}

// WithPayload adds the payload to the get device name nic o k response
func (o *GetDeviceNameNicOK) WithPayload(payload *models.NicDeviceSpecList) *GetDeviceNameNicOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get device name nic o k response
func (o *GetDeviceNameNicOK) SetPayload(payload *models.NicDeviceSpecList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeviceNameNicOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDeviceNameNicInternalServerErrorCode is the HTTP code returned for type GetDeviceNameNicInternalServerError
const GetDeviceNameNicInternalServerErrorCode int = 500

/*
GetDeviceNameNicInternalServerError Failure

swagger:response getDeviceNameNicInternalServerError
*/
type GetDeviceNameNicInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetDeviceNameNicInternalServerError creates GetDeviceNameNicInternalServerError with default headers values
func NewGetDeviceNameNicInternalServerError() *GetDeviceNameNicInternalServerError {

	return &GetDeviceNameNicInternalServerError{}
}

// WithPayload adds the payload to the get device name nic internal server error response
func (o *GetDeviceNameNicInternalServerError) WithPayload(payload string) *GetDeviceNameNicInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get device name nic internal server error response
func (o *GetDeviceNameNicInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeviceNameNicInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
