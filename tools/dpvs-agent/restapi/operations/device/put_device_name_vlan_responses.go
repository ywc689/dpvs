// Code generated by go-swagger; DO NOT EDIT.

package device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PutDeviceNameVlanOKCode is the HTTP code returned for type PutDeviceNameVlanOK
const PutDeviceNameVlanOKCode int = 200

/*
PutDeviceNameVlanOK Success

swagger:response putDeviceNameVlanOK
*/
type PutDeviceNameVlanOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutDeviceNameVlanOK creates PutDeviceNameVlanOK with default headers values
func NewPutDeviceNameVlanOK() *PutDeviceNameVlanOK {

	return &PutDeviceNameVlanOK{}
}

// WithPayload adds the payload to the put device name vlan o k response
func (o *PutDeviceNameVlanOK) WithPayload(payload string) *PutDeviceNameVlanOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put device name vlan o k response
func (o *PutDeviceNameVlanOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutDeviceNameVlanOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutDeviceNameVlanInternalServerErrorCode is the HTTP code returned for type PutDeviceNameVlanInternalServerError
const PutDeviceNameVlanInternalServerErrorCode int = 500

/*
PutDeviceNameVlanInternalServerError Failed

swagger:response putDeviceNameVlanInternalServerError
*/
type PutDeviceNameVlanInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutDeviceNameVlanInternalServerError creates PutDeviceNameVlanInternalServerError with default headers values
func NewPutDeviceNameVlanInternalServerError() *PutDeviceNameVlanInternalServerError {

	return &PutDeviceNameVlanInternalServerError{}
}

// WithPayload adds the payload to the put device name vlan internal server error response
func (o *PutDeviceNameVlanInternalServerError) WithPayload(payload string) *PutDeviceNameVlanInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put device name vlan internal server error response
func (o *PutDeviceNameVlanInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutDeviceNameVlanInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
