// Code generated by go-swagger; DO NOT EDIT.

package device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetDeviceNameNetlinkAddrOKCode is the HTTP code returned for type GetDeviceNameNetlinkAddrOK
const GetDeviceNameNetlinkAddrOKCode int = 200

/*
GetDeviceNameNetlinkAddrOK Success

swagger:response getDeviceNameNetlinkAddrOK
*/
type GetDeviceNameNetlinkAddrOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetDeviceNameNetlinkAddrOK creates GetDeviceNameNetlinkAddrOK with default headers values
func NewGetDeviceNameNetlinkAddrOK() *GetDeviceNameNetlinkAddrOK {

	return &GetDeviceNameNetlinkAddrOK{}
}

// WithPayload adds the payload to the get device name netlink addr o k response
func (o *GetDeviceNameNetlinkAddrOK) WithPayload(payload string) *GetDeviceNameNetlinkAddrOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get device name netlink addr o k response
func (o *GetDeviceNameNetlinkAddrOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeviceNameNetlinkAddrOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetDeviceNameNetlinkAddrNotFoundCode is the HTTP code returned for type GetDeviceNameNetlinkAddrNotFound
const GetDeviceNameNetlinkAddrNotFoundCode int = 404

/*
GetDeviceNameNetlinkAddrNotFound Not Found

swagger:response getDeviceNameNetlinkAddrNotFound
*/
type GetDeviceNameNetlinkAddrNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetDeviceNameNetlinkAddrNotFound creates GetDeviceNameNetlinkAddrNotFound with default headers values
func NewGetDeviceNameNetlinkAddrNotFound() *GetDeviceNameNetlinkAddrNotFound {

	return &GetDeviceNameNetlinkAddrNotFound{}
}

// WithPayload adds the payload to the get device name netlink addr not found response
func (o *GetDeviceNameNetlinkAddrNotFound) WithPayload(payload string) *GetDeviceNameNetlinkAddrNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get device name netlink addr not found response
func (o *GetDeviceNameNetlinkAddrNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeviceNameNetlinkAddrNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
