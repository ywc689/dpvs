// Code generated by go-swagger; DO NOT EDIT.

package device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteDeviceNameRouteOKCode is the HTTP code returned for type DeleteDeviceNameRouteOK
const DeleteDeviceNameRouteOKCode int = 200

/*
DeleteDeviceNameRouteOK delete route Success

swagger:response deleteDeviceNameRouteOK
*/
type DeleteDeviceNameRouteOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewDeleteDeviceNameRouteOK creates DeleteDeviceNameRouteOK with default headers values
func NewDeleteDeviceNameRouteOK() *DeleteDeviceNameRouteOK {

	return &DeleteDeviceNameRouteOK{}
}

// WithPayload adds the payload to the delete device name route o k response
func (o *DeleteDeviceNameRouteOK) WithPayload(payload string) *DeleteDeviceNameRouteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete device name route o k response
func (o *DeleteDeviceNameRouteOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDeviceNameRouteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DeleteDeviceNameRouteInternalServerErrorCode is the HTTP code returned for type DeleteDeviceNameRouteInternalServerError
const DeleteDeviceNameRouteInternalServerErrorCode int = 500

/*
DeleteDeviceNameRouteInternalServerError Failed

swagger:response deleteDeviceNameRouteInternalServerError
*/
type DeleteDeviceNameRouteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewDeleteDeviceNameRouteInternalServerError creates DeleteDeviceNameRouteInternalServerError with default headers values
func NewDeleteDeviceNameRouteInternalServerError() *DeleteDeviceNameRouteInternalServerError {

	return &DeleteDeviceNameRouteInternalServerError{}
}

// WithPayload adds the payload to the delete device name route internal server error response
func (o *DeleteDeviceNameRouteInternalServerError) WithPayload(payload string) *DeleteDeviceNameRouteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete device name route internal server error response
func (o *DeleteDeviceNameRouteInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDeviceNameRouteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
